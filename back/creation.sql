DROP TABLE IF EXISTS DISTANCE;
DROP TABLE IF EXISTS EMPRUNT;
DROP TABLE IF EXISTS VELO;
DROP TABLE IF EXISTS ADHERENT;
DROP TABLE IF EXISTS STATION;
DROP TABLE IF EXISTS ETAT;
DROP TABLE IF EXISTS COMMUNE;

CREATE TABLE COMMUNE (
    NOM_COMMUNE VARCHAR(20),
    ID_COMMUNE INT PRIMARY KEY NOT NULL AUTO_INCREMENT
);

CREATE TABLE ETAT (
    DESCRIPTION VARCHAR(20),
    ID_ETAT INT PRIMARY KEY NOT NULL AUTO_INCREMENT
);

CREATE TABLE ADHERENT (
    NOM VARCHAR(40),
    ADRESSE VARCHAR(100),
    COMMUNE INT,
    DATE_ADHESION DATE,
    ID_ADHERENT INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    FOREIGN KEY (COMMUNE) REFERENCES COMMUNE(ID_COMMUNE)
);

CREATE TABLE STATION (
    ADRESSE VARCHAR(100),
    COMMUNE INT,
    NB_BORNES INT,
    NB_BORNES_DISPO INT,
    ID_STATION INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    FOREIGN KEY (COMMUNE) REFERENCES COMMUNE(ID_COMMUNE)
);

CREATE TABLE VELO (
    MARQUE VARCHAR(20),
    DATE_MISE_EN_SERVICE DATE,
    KILOMETRAGE INT,
    ETAT INT,
    NIVEAU_BATTERIE INT,
    ID_STATION INT,
    ID_VELO INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    FOREIGN KEY (ID_STATION) REFERENCES STATION(ID_STATION)
);

CREATE TABLE EMPRUNT(
    KILOMETRAGE_DEPART INT,
    HEURE_DEPART DATETIME,
    HEURE_RENDU DATETIME DEFAULT NULL,
    ID_ADHERENT INT NOT NULL,
    ID_STATION INT NOT NULL,
    ID_VELO INT NOT NULL,
    ID_EMPRUNT INT PRIMARY KEY NOT NULL AUTO_INCREMENT,
    FOREIGN KEY (ID_ADHERENT) REFERENCES ADHERENT(ID_ADHERENT),
    FOREIGN KEY (ID_STATION) REFERENCES STATION(ID_STATION),
    FOREIGN KEY (ID_VELO) REFERENCES VELO(ID_VELO)
);

CREATE TABLE DISTANCE(
    ID_STATION1 INT,
    ID_STATION2 INT,
    DISTANCE INT,
    FOREIGN KEY (ID_STATION1) REFERENCES STATION(ID_STATION),
    FOREIGN KEY (ID_STATION2) REFERENCES STATION(ID_STATION),
    PRIMARY KEY (ID_STATION1, ID_STATION2)
);

COMMIT;
